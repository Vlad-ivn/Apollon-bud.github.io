const servicesWrap = document.querySelector('.services-wrap');
const loadMoreSection = document.querySelector('.load-more');
const allBlocks = SelectVisibleWorkBlock('services-card');
let NameServicesIsNow = 'services-card'; /*—ñ–º'—è –∫–ª–∞—Å—É –∑ —è–∫–∏–º –ø—Ä–∞—Ü—é—î–º–æ –ø–æ—Ç–æ—á–Ω–æ*/
let ArrayServicesIsNow = []; /*–º–∞—Å–∏–≤ –∫–ª–∞—Å—ñ–≤ –∑ —è–∫–∏–º –ø—Ä–∞—Ü—é—î–º–æ –ø–æ—Ç–æ—á–Ω–æ*/
let lastBlocksInMyArray = []; /*–≤–∏–±—ñ—Ä–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑ –º–∞—Å–∏–≤—É ArrayServicesIsNow –¥–µ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç > 18 —ñ –¥–æ –∫—ñ–Ω—Ü—è –º–∞—Å–∏–≤—É*/
let BlocksInUse = []; /*–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ */

/* –í–∏–±–∏—Ä–∞—î–º–æ –≤—Å—ñ 33 –±–ª–æ–∫–∏  –≤ –º–∞—Å–∏–≤ ArrayServicesIsNow */
ArrayServicesIsNow = SelectVisibleWorkBlock(NameServicesIsNow);

/* –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä(–±–ª–æ–∫–∏) ArrayServicesIsNow –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –¥–æ–≤–∂–∏–Ω–∏ –º–∞—Å–∏–≤–∞ */
toggleLast15BlocksVisibility(ArrayServicesIsNow);

function toggleLast15BlocksVisibility(myArray) {
    if (myArray.length > 18) {
        loadMoreSection.style.display = 'block';
        if (myArray[18].style.display === 'none') {
            // Show the last 15 blocks
            lastBlocksInMyArray = Array.from(myArray).slice(18);
            lastBlocksInMyArray.forEach(block => block.style.display = 'block');
        } else {
            // Hide the last 15 blocks
            lastBlocksInMyArray = Array.from(myArray).slice(18);
            lastBlocksInMyArray.forEach(block => block.style.display = 'none');
            console.log("Hiding the last 15 blocks");
        }
    } else {
        loadMoreSection.style.display = 'none';
    }
};

/* –°—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å—Ç–∏–ª—è –≤—Å—ñ—Ö –±–ª–æ–∫—ñ–≤ services-card –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ True False */
function AllBlocksVisibility(booleanParameter) {
    allBlocks.forEach(block => block.style.display = booleanParameter ? 'block' : 'none');
};

/* –í–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∑–∞ –≤–∏–±—Ä–∞–Ω–∏–º —ñ–º'—è–º –∫–ª–∞—Å—É */
function SelectVisibleWorkBlock(textParameter) {
    return servicesWrap.querySelectorAll('.' + textParameter);
};

loadMoreSection.addEventListener('click', function () {
    toggleLast15BlocksVisibility(ArrayServicesIsNow);
});

function ScrollToMyPossition(myClassName) {
    const element = document.getElementById(myClassName); 
    if (element) {
        const offsetTop = element.getBoundingClientRect().top + window.pageYOffset;
        window.scrollTo({
            top: offsetTop,
            behavior: 'smooth'
        });
        console.log(`Scrolled to ${myClassName}`);
    } else {
        console.log(`Element with id '${myClassName}' not found`);
    }
}

function smoothScrollTo(targetPosition) {
    const startPosition = window.pageYOffset;
    const distance = targetPosition - startPosition;
    const duration = 800; // –í—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    let startTime = null;

    function animation(currentTime) {
        if (startTime === null) startTime = currentTime;
        const timeElapsed = currentTime - startTime;
        const run = ease(timeElapsed, startPosition, distance, duration);
        window.scrollTo(0, run);
        if (timeElapsed < duration) requestAnimationFrame(animation);
    }

    function ease(t, b, c, d) {
        t /= d / 2;
        if (t < 1) return c / 2 * t * t + b;
        t--;
        return -c / 2 * (t * (t - 2) - 1) + b;
    }

    requestAnimationFrame(animation);
}

window.addEventListener("click", function (event) {
    if (event.target.hasAttribute('data-btn')) {
        console.log(`Button clicked with data-btn: ${event.target.getAttribute('data-btn')}`);
        
        AllBlocksVisibility(false);
        NameServicesIsNow = event.target.getAttribute('data-btn');
        ArrayServicesIsNow = SelectVisibleWorkBlock(NameServicesIsNow);
        
        console.log(`New blocks selected: ${ArrayServicesIsNow.length} blocks`);
        
        ArrayServicesIsNow.forEach(block => block.style.display = 'block');
        toggleLast15BlocksVisibility(ArrayServicesIsNow);

        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –±–ª–æ–∫—É services-wrap –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
        const offsetTop = servicesWrap.getBoundingClientRect().top + window.pageYOffset;

        console.log(`servicesWrap found. Offset top: ${offsetTop}`);

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–ª–∞–≤–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        smoothScrollTo(offsetTop);

        console.log('Scrolling to servicesWrap with animation');
    }
});


/*burger-menu*/
const menuBtn = document.getElementById("burger");
const headerMenu = document.querySelector(".header");

menuBtn.addEventListener("click", function() {
    headerMenu.classList.toggle("open");
    
    // –û—Ç—Ä–∏–º—É—î–º–æ <body>
    const body = document.body;

    // –î–æ–¥–∞—î–º–æ –∞–±–æ –≤–∏–¥–∞–ª—è—î–º–æ –∫–ª–∞—Å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª–∞—Å—É "open"
    if (headerMenu.classList.contains("open")) {
        body.style.overflow = "hidden";
    } else {
        body.style.overflow = "visible";
    }
});

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–µ–Ω—é –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –º–µ–Ω—é –ø—Ä–∏ –∫–ª—ñ—Ü—ñ
const menuItems = document.querySelectorAll(".header__menu-list-item-left a");
menuItems.forEach(item => {
    item.addEventListener("click", function() {
        headerMenu.classList.remove("open");
        document.body.style.overflow = "visible";
    });
});

/* Contact-Form */
document.addEventListener("DOMContentLoaded", function () {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    document.getElementById("telegramForm").addEventListener("submit", function (event) {
        event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã

        var name = document.getElementsByName("name")[0].value;
        var phone = document.getElementsByName("phone")[0].value;
        var email = document.getElementsByName("email")[0].value;
        var messageBox = document.getElementsByName("comment")[0].value;

        const checkedBox = document.querySelector('.custom-checkbox-label');
        const realCheckbox = document.querySelector('.real-checkbox')
        //const realCheckbox = document.querySelector('.custom-checkbox')

        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ª–∏ –≥–∞–ª–æ—á–∫–∞ –≤ —á–µ–∫–±–æ–∫—Å–µ
        /*if (!realCheckbox.checked) {
            // –ï—Å–ª–∏ –≥–∞–ª–æ—á–∫–∞ –Ω–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞, –≤—ã–¥–µ–ª–∏—Ç—å —á–µ–∫–±–æ–∫—Å –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º
            
            checkedBox.style.color = "#FC3300";
            
            return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å
        } else {
            // –ï—Å–ª–∏ –≥–∞–ª–æ—á–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–≤–µ—Ç —á–µ–∫–±–æ–∫—Å–∞
            checkedBox.style.color = "";
        }*/
            
        
            
        // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID —á–∞—Ç–∞ –≤ Telegram
        var telegramBotToken = '6429763059:AAG7FVwzJ19rqWKiUxQU1Bq7uDW417yQvBU';
        var telegramChatID = '602384524';

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
        let mytime = new Date().toLocaleString();
            
        var message = "*–ü—Ä–∏–≤—ñ—Ç!üòé   –í –º–µ–Ω–µ —î –Ω–æ–≤—ñ –¥–∞–Ω—ñ –∑ —Ñ–æ—Ä–º–∏:* " + "\n";
        message += "\n";
        message += "‚öú –Ü–º'—è: " + `*${name}*` + "\n";
        message += "‚öú –¢–µ–ª–µ—Ñ–æ–Ω: " + `*${phone}*` + "\n";
        message += "‚öú –ü–æ—à—Ç–∞: " + `*${email}*` + "\n";
        message += "‚öú –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: " + `*${messageBox}*` + "\n";
        message += "\n";
        message += "‚åö –î–∞—Ç–∞ —Ç–∞ —á–∞—Å: " + mytime;

       
        
            

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Ajax
        const telegramURL = "https://api.telegram.org/bot" + telegramBotToken + "/sendMessage";

        var data = {
            chat_id: telegramChatID,
            text: message,
            parse_mode: "Markdown"
                    
        };

        var xhr = new XMLHttpRequest();
        xhr.open("POST", telegramURL, true);
        xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        xhr.send(JSON.stringify(data));       
        

        // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        document.getElementById("telegramForm").reset();
        /*document.getElementsByName("name")[0].value = "";
        document.getElementsByName("phone")[0].value = "";
        document.getElementsByName("email")[0].value = "";
        document.getElementsByName("comment")[0].value = "";*/
    });
});




/*button-top*/
document.addEventListener('DOMContentLoaded', function () {
    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    var goToTopImg = document.getElementById('goToTopBtn');

    goToTopImg.addEventListener('click', function () {
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ –≤–µ—Ä—Ö—É
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
});






/*MORE SERVICES
document.addEventListener('DOMContentLoaded', function () {
    const loadMoreButton = document.querySelector('.load-more__container-inner');
    const servicesContainer = document.querySelector('.services');

    if (loadMoreButton) {
        loadMoreButton.addEventListener("click", function (event) {
            const allCards = document.querySelectorAll('.services-card');

            allCards.forEach((card, index) => {
                if (index + 1 >= 19) { // Starting from the 18th block
                    card.classList.toggle('services-card__hiddenNOT');
                }
            });
        });
    }
});*/



/*scroll*/
/*gsap.registerPlugin(ScrollTrigger, ScrollSmoother);

    if(ScrollTrigger.isTouch !==1) {
        ScrollSmoother.create({
            wrapper: '.wrapper',
            content: '.content',
            smooth: 1.5
    })

};*/
